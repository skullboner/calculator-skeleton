// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block                 = require("bs-platform/lib/js/block.js");
var Curry                 = require("bs-platform/lib/js/curry.js");
var React                 = require("react");
var $$String              = require("bs-platform/lib/js/string.js");
var ReasonReact           = require("reason-react/src/ReasonReact.js");
var Display$ReactTemplate = require("./display.bs.js");

var component = ReasonReact.reducerComponent("App");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var reduce = param[/* reduce */1];
      return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Display$ReactTemplate.make(param[/* state */2][/* displayValue */0], /* array */[])), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* NumberPart */Block.__(0, [/* "9" */57]);
                            }))
                    }, "9"), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* NumberPart */Block.__(0, [/* "8" */56]);
                            }))
                    }, "8"), React.createElement("button", {
                      onClick: Curry._1(reduce, (function () {
                              return /* Operation */Block.__(1, [/* Plus */2]);
                            }))
                    }, "8"));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* displayValue */"0",
              /* currentOperator : None */0,
              /* currentValue */0.0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        return /* NoUpdate */0;
      } else if (action.tag) {
        return /* NoUpdate */0;
      } else {
        var displayValue = state[/* displayValue */0];
        var a = action[0];
        var newValue = displayValue === "0" ? $$String.make(1, a) : displayValue + $$String.make(1, a);
        return /* Update */Block.__(0, [/* record */[
                    /* displayValue */newValue,
                    /* currentOperator */state[/* currentOperator */1],
                    /* currentValue */state[/* currentValue */2]
                  ]]);
      }
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
